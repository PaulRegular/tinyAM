% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.R
\name{fit_retro}
\alias{fit_retro}
\title{Retrospective fits for TAM}
\usage{
fit_retro(
  fit,
  folds = 2,
  start_from_fit = FALSE,
  hindcast = FALSE,
  grad_tol = NULL,
  progress = TRUE,
  globals = NULL
)
}
\arguments{
\item{fit}{A fitted TAM object as returned by \code{\link[=fit_tam]{fit_tam()}}.}

\item{folds}{Integer; number of terminal peels (default \code{2}).}

\item{start_from_fit}{Logical; use terminal parameter estimates as starting
values for retrospective fits?}

\item{hindcast}{Logical; fit one-step-ahead projections? If \code{TRUE},
\code{proj_settings} will be set to \code{list(n_proj = 1, n_mean = 1, F_mult = 1)}
to generate a one year status-quo F projection.}

\item{grad_tol}{Numeric tolerance for \verb{max|grad|}. If \code{NULL} (default),
the tolerance stored on \code{fit} (from \code{\link[=fit_tam]{fit_tam()}}) is used; otherwise the
supplied value is passed to \code{\link[=check_convergence]{check_convergence()}}. Output from retro fits
that exceed this tolerance are dropped (see \code{\link[=check_convergence]{check_convergence()}}).}

\item{progress}{Logical; show progress bar using \code{\link[progressr:with_progress]{progressr::with_progress()}}.}

\item{globals}{Character vector naming global objects to supply to the workers.}
}
\value{
A list whose elements are:
\itemize{
\item \code{obs_pred} — a named list of stacked data frames (e.g., \code{catch}, \code{index});
\item \code{pop} — a named list of stacked data frames (e.g., \code{ssb}, \code{N}, \code{M},
\code{mu_M}, \code{F}, \code{mu_F}, \code{Z}, \code{ssb_mat});
\item \code{mohns_rho} - data frame of Mohn's rho (measure of retrospective bias) values
for each data frame within \code{pop} (calculated using \code{\link[=compute_mohns_rho]{compute_mohns_rho()}}
function);
\item \code{hindcast_rmse} (when \code{hindcast = TRUE}) - root mean squared error for
use as an overall measure of the forecast skill of the model (calculated
from catch and index observations using the \code{\link[=compute_hindcast_rmse]{compute_hindcast_rmse()}}
function); and,
\item \code{fits} - refitted objects for each peel (named by terminal year).
The \code{obs_pred} and \code{pop} objects are created using \code{\link[=tidy_tam]{tidy_tam()}}. A \code{fold} column
is added to each data.frame within these objects which specifies the terminal
year.
}
}
\description{
Creates a sequence of terminal-year peels and refits the model on each
truncated year range.
}
\details{
Run a retrospective (peel) analysis

Peel years are \code{(max_year - folds) : max_year}.
Each refit is attempted with \code{try()} so individual failures do not stop the sequence.
Refits are generated via \code{update(fit, years = ...)}; ensure your \code{fit} object
supports \code{update()} with a \code{years} argument. This function uses
\code{\link[furrr:future_map]{furrr::future_map()}} to run the retros in parallel. Remember to plan your session (e.g.,
\code{future::plan(multisession, workers = 4)}).
}
\examples{
fit <- fit_tam(
  cod_obs,
  years = 1983:2024,
  ages = 2:14,
  N_settings = list(process = "iid", init_N0 = FALSE),
  F_settings = list(process = "approx_rw", mu_form = NULL),
  M_settings = list(process = "off", assumption = ~ I(0.3)),
  obs_settings = list(sd_catch_form = ~ 1, sd_index_form = ~ 1, q_form = ~ q_block),
  silent = TRUE
)
\donttest{
if (interactive()) {
  # Choose your parallel plan (set once per session)
  future::plan(future::multisession, workers = 4)
  retros <- fit_retro(fit, folds = 5, progress = TRUE)
  head(retros$pop$ssb)
  head(retros$mohns_rho)

  vis_tam(retros$fits)
}
}

}
\seealso{
\code{\link[=fit_tam]{fit_tam()}}, \code{\link[=sim_tam]{sim_tam()}}
}
