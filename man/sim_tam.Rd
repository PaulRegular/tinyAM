% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim.R
\name{sim_tam}
\alias{sim_tam}
\title{Simulate from a fitted TAM}
\usage{
sim_tam(
  fit,
  n = 10,
  par_uncertainty = c("joint", "fixed", "none"),
  redraw_random = FALSE,
  progress = TRUE,
  globals = NULL,
  seed = TRUE
)
}
\arguments{
\item{fit}{A fitted TAM object returned by \code{\link[=fit_tam]{fit_tam()}}.}

\item{n}{Integer; number of simulations (default \code{10}).}

\item{par_uncertainty}{Character; one of \code{"joint"}, \code{"fixed"}, \code{"none"}.
Controls how the parameter list is sampled before each simulation (see Details).}

\item{redraw_random}{Logical; if \code{TRUE}, re-draw random-effect fields from their
process models on each run (recommended for projections). If \code{FALSE}, keep
random effects and simulate observations only.}

\item{progress}{Logical; show a progress bar using \code{\link[progressr:with_progress]{progressr::with_progress()}}
(default \code{TRUE}).}

\item{globals}{Optional character vector of global objects for parallel workers
(forwarded to \code{\link[furrr:furrr_options]{furrr::furrr_options()}}).}

\item{seed}{Seed passed to \code{\link[furrr:furrr_options]{furrr::furrr_options()}} for reproducibility.}
}
\value{
A \strong{named list of data frames} (e.g., \code{catch}, \code{index}, \code{N}, \code{F}, \code{M}, \code{Z}, \code{ssb}, …),
each stacked across \code{n} simulations with a \code{sim} column.
}
\description{
Runs the TAM likelihood in simulation mode to generate synthetic observations,
and optionally random-effect fields, then recomputes reported quantities under
those draws. Results are returned as tidy data frames stacked across \code{n}
simulations with a \verb{sim = 1..n} column.
}
\details{
The simulation has two orthogonal controls:
\itemize{
\item \strong{Parameter uncertainty} via \code{par_uncertainty}:
\itemize{
\item \code{"none"}  — use point estimates \verb{(û, θ̂)}.
\item \code{"fixed"} — sample \strong{fixed effects} \code{θ ~ MVN(sdrep$par.fixed, sdrep$cov.fixed)}.
\item \code{"joint"} — sample \strong{(random + fixed)} jointly from the Laplace
approximate posterior using the \strong{joint precision} (sparse Cholesky).
}
\item \strong{Random-effect handling} via \code{redraw_random}:
\itemize{
\item \code{FALSE} — keep the sampled/fitted random effects and simulate \strong{observations only}
(posterior-predictive when \code{par_uncertainty = "joint"}).
\item \code{TRUE}  — generate \strong{new process fields} for the random effects and re-simulate
(projection/HCR style prior-predictive runs).
}
}

Parallel execution is supported via \code{\link[furrr:future_map]{furrr::future_map()}}. Call
\code{future::plan()} beforehand if you want parallel workers.
}
\examples{
\donttest{
if (interactive()) {
  # Set-up parallel workers and fit model
  future::plan(future::multisession, workers = 4)
  fit <- fit_tam(cod_obs, years = 1983:2024, ages = 2:14)

  # Draw fixed-effects uncertainty and redraw random process fields
  sims1 <- sim_tam(fit, n = 10, par_uncertainty = "fixed", redraw_random = TRUE)
  plot_trend(sims1$ssb, split = ~sim, line = list(width = 0.5))

  # Joint draw of random and fixed effects, keep random effects, simulate obs only
  sims2 <- sim_tam(fit, n = 10, par_uncertainty = "joint", redraw_random = FALSE)
  plot_trend(sims2$ssb, split = ~sim, line = list(width = 0.5))

  # Conditional/fast: point estimates, obs only
  sims3 <- sim_tam(fit, n = 10, par_uncertainty = "none", redraw_random = FALSE)
  plot_trend(sims3$index, y = ~obs, frame = ~age, split = ~sim, line = list(width = 0.5))
}
}

}
\seealso{
\code{\link[=fit_tam]{fit_tam()}}, \code{\link[=tidy_rep]{tidy_rep()}}, \code{\link[=stack_nested]{stack_nested()}}
}
